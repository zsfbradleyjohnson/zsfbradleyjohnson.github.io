---
layout: post
title:  "多线程"
date:   2015-08-01 20:14:33
categories: iOS
comments: true
---
> &nbsp;&nbsp;&nbsp;&nbsp;具有多线程能力的计算机因有硬件支持而能够在同一时间执行多于一个线程，进而提升整体处理性能。 在一个程序中，这些独立运行的程序片段叫作“线程”（Thread），利用它编程的概念就叫作“多线程处理（Multithreading）”。具有多线程能力的计算机因有硬件支持而能够在同一时间执行多于一个线程，进而提升整体处理性能。

<br>

#### 1.多线程在iOS上的实现途径
&nbsp;&nbsp;&nbsp;&nbsp;在iOS上，我们常见的多线程有三种： `NSThread`、 `NSOperation`、 `GCD`。他们常见的优缺点分别如下：
<br>
<br>
`NSThread`: 更为轻量级。但是需要自己管理线程的生命周期，线程同步。线程同步对数据的加锁会有一定的系统开销。
<br><br>
`NSOperation `: 不需要关心线程管理，数据同步的事情，可以把精力放在自己需要执行的操作上。但是它是抽象类，使用它必须用它的子类，可以实现它或者使用它定义好的两个子类：`NSInvocationOperation` 和 `NSBlockOperation`。
<br><br>
`GCD `: 它会自动管理线程的生命周期（创建线程、调度任务、销毁线程），完全不需要我们管理，我们只需要告诉干什么就行。而且它使用了较多的Block，更加的灵活方便。但是它是基于C语言封装的，所以在可读性和理解性上没有那么便捷。

<br><br>
其实还有一种 `Pthreads` 的多线程技术，它是在类Unix操作系统（Unix、Linux、Mac OS X等）中，都使用Pthreads作为操作系统的线程。简单地说，这是一套在很多操作系统上都通用的多线程API，所以移植性很强（然并卵），当然在 iOS 中也是可以的。
<br>
也因为它在iOS上的使用几乎为零，所以我们也就忽略它不谈。